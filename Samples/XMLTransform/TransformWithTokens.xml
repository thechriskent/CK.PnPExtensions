<?xml version="1.0"?>
<transform xmlns:pnp="http://schemas.dev.office.com/PnP/2016/05/ProvisioningSchema">
	<tokens start="_." end="._">
		<simple name="HToken" value="Hello"/>
		<simple name="WToken" value="World"/>
		<simple name="Magic" value="_.HToken._ _.WToken._!"/>
		<simple name="MyPath" value="Template"/>
		<simple name="horsey" value="pnp:horse" />
		
		<path name="PollsDefaultCTID" path="pnp:Provisioning/pnp:Templates/pnp:ProvisioningTemplate/pnp:Lists/pnp:ListInstance[@Title='Polls']/pnp:ContentTypeBindings/pnp:ContentTypeBinding[@Default='true']/@ContentTypeID"/>
		<path name="PollsCTBs" type="path" path="pnp:Provisioning/pnp:Templates/pnp:ProvisioningTemplate/pnp:Lists/pnp:ListInstance[@Title='Polls']/pnp:ContentTypeBindings" />
		<path name="PollsCTBsFull" type="path" path="pnp:Provisioning/pnp:Templates/pnp:ProvisioningTemplate/pnp:Lists/pnp:ListInstance[@Title='Polls']/pnp:ContentTypeBindings" includeself="true"/>
		
		<exists name="PathExists" path="pnp:Provisioning/pnp:Templates/pnp:Provisioning_.MyPath._/pnp:Lists/pnp:ListInstance[@Title='Polls']" />
		<exists name="ValueExists" value=""/>
		
		<equals name="PathEquality" path="pnp:Provisioning/pnp:Templates/pnp:ProvisioningTemplate/pnp:Lists/pnp:ListInstance[@Title='Polls']/pnp:ContentTypeBindings/pnp:ContentTypeBinding[@Default='true']/@ContentTypeID" compareto="0x0100E6C746303DC4CA40A9B4E40E22FDAAD" />
		<equals name="ValueEquality" value="World!" compareto="_.WToken._" />
		
		<contains name="PathContains" path="pnp:Provisioning/pnp:Templates/pnp:ProvisioningTemplate/pnp:Lists/pnp:ListInstance[@Title='Polls']/@Url" compareto="Poll"/>
		<contains name="ValueContains" value="_.Magic._" compareto="_.WToken._"/>
		
		<startswith name="PathStartsWith" path="pnp:Provisioning/pnp:Templates/pnp:ProvisioningTemplate/pnp:Lists/pnp:ListInstance[@Title='Polls']/@Url" compareto="Lists"/>
		<startswith name="ValueStartsWith" value="_.Magic._" compareto="_.HToken._"/>
		
		<endswith name="PathEndsWith" path="pnp:Provisioning/pnp:Templates/pnp:ProvisioningTemplate/pnp:Lists/pnp:ListInstance[@Title='Polls']/@Url" compareto="Polls"/>
		<endswith name="ValueEndsWith" value="_.Magic._" compareto="_.WToken._!"/>
	</tokens>
	
	<actions>

		<add path="pnp:Provisioning/pnp:Templates/pnp:ProvisioningTemplate">
			<someElement contents="_.Magic._"/>
		</add>
		<attribute path="pnp:Provisioning/pnp:Templates" name="_.HToken._Attr" value="_.Magic._"/>
		<add path="pnp:Provisioning/pnp:Templates/pnp:ProvisioningTemplate">
			<someElement _.WToken._="_.Magic._"/>
		</add>
		<add path="pnp:Provisioning/pnp:Templates/pnp:Provisioning_.MyPath._">
			<_.horsey._ wowsers="yip" />
		</add>
		<add path="pnp:Provisioning/pnp:Templates/pnp:ProvisioningTemplate">
			<someCTID ContentTypeID="_.PollsDefaultCTID._" />
		</add>
		
		<add path="pnp:Provisioning/pnp:Templates/pnp:ProvisioningTemplate" if="true">
			<alwaysAdded condition="if" />
		</add>
		<add path="pnp:Provisioning/pnp:Templates/pnp:ProvisioningTemplate" if="false">
			<neverAdded condition="if" />
		</add>
		<add path="pnp:Provisioning/pnp:Templates/pnp:ProvisioningTemplate" not="false">
			<alwaysAdded condition="not" />
		</add>
		<add path="pnp:Provisioning/pnp:Templates/pnp:ProvisioningTemplate" not="true">
			<neverAdded condition="not" />
		</add>
		
		<add path="pnp:Provisioning/pnp:Templates/pnp:ProvisioningTemplate" if="_.ValueContains._">
			<whenTokenTrue condition="if" />
		</add>
		<add path="pnp:Provisioning/pnp:Templates/pnp:ProvisioningTemplate" not="_.ValueContains._">
			<whenTokenFalse condition="not" />
		</add>
		
		<add path="pnp:Provisioning/pnp:Templates/pnp:ProvisioningTemplate">
			<magicContentBindings>
				_.PollsCTBs._
			</magicContentBindings>
		</add>
		<add path="pnp:Provisioning/pnp:Templates/pnp:ProvisioningTemplate">
			_.PollsCTBsFull._
		</add>
		
		<add path="pnp:Provisioning/pnp:Templates/pnp:ProvisioningTemplate">
			<conditionalResults existsPath="_.PathExists._" existsValue="_.ValueExists._" equalsPath="_.PathEquality._" equalsValue="_.ValueEquality._" containsPath="_.PathContains._" containsValue="_.ValueContains._" startswithPath="_.PathStartsWith._" startswithValue="_.ValueStartsWith._" endswithPath="_.PathEndsWith._" endswithValue="_.ValueEndsWith._"/>
		</add>
		
	</actions>
</transform>