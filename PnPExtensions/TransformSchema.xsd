<?xml version="1.0" encoding="utf-8"?>
<xs:schema targetNamespace="http://thechriskent.com/TransformSchema.xsd"
    elementFormDefault="qualified"
    xmlns="http://thechriskent.com/TransformSchema.xsd"
    xmlns:xs="http://www.w3.org/2001/XMLSchema">

  <xs:simpleType name="add-location">
    <xs:restriction base="xs:string">
      <xs:enumeration value="append"/>
      <xs:enumeration value="prepend"/>
      <xs:enumeration value="before"/>
      <xs:enumeration value="after"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="reorder-position">
    <xs:restriction base="xs:string">
      <xs:enumeration value="top"/>
      <xs:enumeration value="bottom"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:element name="transform">
    <xs:complexType>
      <xs:all>

        <xs:element name="tokens" minOccurs="0" maxOccurs="1">
          <xs:complexType>
            <xs:all>

              <xs:element name="simple" minOccurs="0">
                <xs:complexType>
                  <xs:attribute name="name" type="xs:string" use="required">
                    <xs:annotation>
                      <xs:documentation>The name of the Token</xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="value" type="xs:string" use="required">
                    <xs:annotation>
                      <xs:documentation>The value to assign to the token (can contain tokens)</xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                </xs:complexType>
              </xs:element>

              <xs:element name="path" minOccurs="0">
                <xs:complexType>
                  <xs:attribute name="name" type="xs:string" use="required">
                    <xs:annotation>
                      <xs:documentation>The name of the Token</xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="path" type="xs:string" use="required">
                    <xs:annotation>
                      <xs:documentation>xPath to retrieve the value from (path can contain tokens). Can be an attribute or element. If multiple elements, only the first is used.</xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="includeself" type="xs:string" use="optional">
                    <xs:annotation>
                      <xs:documentation>true or false (can contain tokens), default=false. Used when path points to an element. When false, only the children of the targeted element are returned. When true, the element and its children are returned.</xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                </xs:complexType>
              </xs:element>

              <xs:element name="exists" minOccurs="0">
                <xs:annotation>
                  <xs:documentation>Boolean Token (true or false). Used to determine if path or value exist.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                  <xs:attribute name="name" type="xs:string" use="required">
                    <xs:annotation>
                      <xs:documentation>The name of the Token</xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="path" type="xs:string" use="optional">
                    <xs:annotation>
                      <xs:documentation>xPath to validate (path can contain tokens). Can be an attribute or element. Returns true when path has node(s) and false when it doesn't.</xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="value" type="xs:string" use="optional">
                    <xs:annotation>
                      <xs:documentation>The value to validate (can contain tokens). Returns true if the value has a value, and false if null or blank. Used if path is ommitted.</xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                </xs:complexType>
              </xs:element>

              <xs:element name="equals" minOccurs="0">
                <xs:annotation>
                  <xs:documentation>Boolean Token (true or false). Used to determine if the comparison value equals the compareto value.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                  <xs:attribute name="name" type="xs:string" use="required">
                    <xs:annotation>
                      <xs:documentation>The name of the Token</xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="path" type="xs:string" use="optional">
                    <xs:annotation>
                      <xs:documentation>xPath to retrieve the comparison value from (path can contain tokens). Can be an attribute or element. If multiple elements, only the first is used.</xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="includeself" type="xs:string" use="optional">
                    <xs:annotation>
                      <xs:documentation>true or false (can contain tokens), default=false. Used when path points to an element. When false, only the children of the targeted element are returned. When true, the element and its children are returned.</xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="value" type="xs:string" use="optional">
                    <xs:annotation>
                      <xs:documentation>The comparison value (can contain tokens). Used if path is omitted.</xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="compareto" type="xs:string" use="required">
                    <xs:annotation>
                      <xs:documentation>The value to use in the comparison (can contain tokens).</xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                </xs:complexType>
              </xs:element>

              <xs:element name="contains" minOccurs="0">
                <xs:annotation>
                  <xs:documentation>Boolean Token (true or false). Used to determine if the comparison value contains the compareto value.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                  <xs:attribute name="name" type="xs:string" use="required">
                    <xs:annotation>
                      <xs:documentation>The name of the Token</xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="path" type="xs:string" use="optional">
                    <xs:annotation>
                      <xs:documentation>xPath to retrieve the comparison value from (path can contain tokens). Can be an attribute or element. If multiple elements, only the first is used.</xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="includeself" type="xs:string" use="optional">
                    <xs:annotation>
                      <xs:documentation>true or false (can contain tokens), default=false. Used when path points to an element. When false, only the children of the targeted element are returned. When true, the element and its children are returned.</xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="value" type="xs:string" use="optional">
                    <xs:annotation>
                      <xs:documentation>The comparison value (can contain tokens). Used if path is omitted.</xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="compareto" type="xs:string" use="required">
                    <xs:annotation>
                      <xs:documentation>The value to use in the comparison (can contain tokens).</xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                </xs:complexType>
              </xs:element>

              <xs:element name="startswith" minOccurs="0">
                <xs:annotation>
                  <xs:documentation>Boolean Token (true or false). Used to determine if the comparison value starts with the compareto value.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                  <xs:attribute name="name" type="xs:string" use="required">
                    <xs:annotation>
                      <xs:documentation>The name of the Token</xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="path" type="xs:string" use="optional">
                    <xs:annotation>
                      <xs:documentation>xPath to retrieve the comparison value from (path can contain tokens). Can be an attribute or element. If multiple elements, only the first is used.</xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="includeself" type="xs:string" use="optional">
                    <xs:annotation>
                      <xs:documentation>true or false (can contain tokens), default=false. Used when path points to an element. When false, only the children of the targeted element are returned. When true, the element and its children are returned.</xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="value" type="xs:string" use="optional">
                    <xs:annotation>
                      <xs:documentation>The comparison value (can contain tokens). Used if path is omitted.</xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="compareto" type="xs:string" use="required">
                    <xs:annotation>
                      <xs:documentation>The value to use in the comparison (can contain tokens).</xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                </xs:complexType>
              </xs:element>

              <xs:element name="endswith" minOccurs="0">
                <xs:annotation>
                  <xs:documentation>Boolean Token (true or false). Used to determine if the comparison value ends with the compareto value.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                  <xs:attribute name="name" type="xs:string" use="required">
                    <xs:annotation>
                      <xs:documentation>The name of the Token</xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="path" type="xs:string" use="optional">
                    <xs:annotation>
                      <xs:documentation>xPath to retrieve the comparison value from (path can contain tokens). Can be an attribute or element. If multiple elements, only the first is used.</xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="includeself" type="xs:string" use="optional">
                    <xs:annotation>
                      <xs:documentation>true or false (can contain tokens), default=false. Used when path points to an element. When false, only the children of the targeted element are returned. When true, the element and its children are returned.</xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="value" type="xs:string" use="optional">
                    <xs:annotation>
                      <xs:documentation>The comparison value (can contain tokens). Used if path is omitted.</xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="compareto" type="xs:string" use="required">
                    <xs:annotation>
                      <xs:documentation>The value to use in the comparison (can contain tokens).</xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                </xs:complexType>
              </xs:element>
              
            </xs:all>
          </xs:complexType>
        </xs:element>

        <xs:element name="actions" minOccurs="1" maxOccurs="1">
          <xs:complexType>
          <xs:all minOccurs="1">

            <xs:element name="add" minOccurs="0">
              <xs:annotation>
                <xs:documentation>Adds the inner element(s) to the targeted element(s)</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:any processContents="skip" minOccurs="1"/>
                </xs:sequence>
                <xs:attribute name="path" type="xs:string" use="required">
                  <xs:annotation>
                    <xs:documentation>xPath to the targeted element(s)</xs:documentation>
                  </xs:annotation>
                </xs:attribute>
                <xs:attribute name="location" type="add-location" use="optional">
                  <xs:annotation>
                    <xs:documentation>Default is append, otherwise determines where inner element(s) are inserted relative to the targeted element(s)</xs:documentation>
                  </xs:annotation>
                </xs:attribute>
              </xs:complexType>
            </xs:element>

            <xs:element name="remove" minOccurs="0">
              <xs:annotation>
                <xs:documentation>Removes the targeted element(s)</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:attribute name="path" type="xs:string" use="required">
                  <xs:annotation>
                    <xs:documentation>xPath to the targeted element(s)</xs:documentation>
                  </xs:annotation>
                </xs:attribute>
              </xs:complexType>
            </xs:element>

            <xs:element name="attribute" minOccurs="0">
              <xs:annotation>
                <xs:documentation>When a value is provided, the target element(s) attribute is set to the value, when no value provided, then the attribute is removed</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:attribute name="path" type="xs:string" use="required">
                  <xs:annotation>
                    <xs:documentation>xPath to the targeted element(s)</xs:documentation>
                  </xs:annotation>
                </xs:attribute>
                <xs:attribute name="name" type="xs:string" use="required">
                  <xs:annotation>
                    <xs:documentation>The name of the targeted attribute)</xs:documentation>
                  </xs:annotation>
                </xs:attribute>
                <xs:attribute name="value" type="xs:string" use="optional">
                  <xs:annotation>
                    <xs:documentation>The value for the attribute (if missing, then attribute is removed from target element(s))</xs:documentation>
                  </xs:annotation>
                </xs:attribute>
              </xs:complexType>
            </xs:element>

            <xs:element name="reorder" minOccurs="0">
              <xs:annotation>
                <xs:documentation>Reorders the child elements of the targeted element(s)</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:attribute name="path" type="xs:string" use="required">
                  <xs:annotation>
                    <xs:documentation>xPath to the targeted element(s)</xs:documentation>
                  </xs:annotation>
                </xs:attribute>
                <xs:attribute name="key" type="xs:string" use="required">
                  <xs:annotation>
                    <xs:documentation>The name of the attribute to be used to reorder the children</xs:documentation>
                  </xs:annotation>
                </xs:attribute>
                <xs:attribute name="order" type="xs:string" use="required">
                  <xs:annotation>
                    <xs:documentation>Comma separated list of values used to determine order of children</xs:documentation>
                  </xs:annotation>
                </xs:attribute>
                <xs:attribute name="position" type="reorder-position" use="optional">
                  <xs:annotation>
                    <xs:documentation>Default is top, otherwise determines where ordered children are placed in relation to unordered children</xs:documentation>
                  </xs:annotation>
                </xs:attribute>
              </xs:complexType>
            </xs:element>

          </xs:all>
        </xs:complexType>
        </xs:element>

      </xs:all>
    </xs:complexType>
  </xs:element>
  
  
  
</xs:schema>
